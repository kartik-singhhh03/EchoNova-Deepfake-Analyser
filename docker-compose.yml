version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: echonova-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: echonova
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - echonova-network

  # Backend API Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: echonova-server
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/echonova?authSource=admin
      - FRONTEND_URL=http://localhost:5173
      - ML_SERVICE_URL=http://ml-service:5001
      - JWT_SECRET=your-super-secret-jwt-key-here
      - WEB3_STORAGE_TOKEN=your-web3-storage-token-here
      - POLYGON_RPC_URL=https://polygon-rpc.com
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - echonova-network

  # ML Service
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: echonova-ml-service
    restart: unless-stopped
    environment:
      - ML_SERVICE_PORT=5001
      - SERVER_URL=http://server:5000
      - MODEL_DIR=/app/models
      - TEMP_DIR=/app/temp
    ports:
      - "5001:5001"
    volumes:
      - ./ml-service:/app
      - ml_models:/app/models
      - ml_temp:/app/temp
    networks:
      - echonova-network

  # Frontend (for development)
  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: echonova-client
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:5000
      - VITE_ML_SERVICE_URL=http://localhost:5001
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - echonova-network
    depends_on:
      - server

volumes:
  mongodb_data:
    driver: local
  ml_models:
    driver: local
  ml_temp:
    driver: local

networks:
  echonova-network:
    driver: bridge